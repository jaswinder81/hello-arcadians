name: Build and deploy WAR app to Azure Web App - test-appdemo001 via Storage Account

on:
  push:
    branches:
      - feature/testing-app
  workflow_dispatch:

env:
  WEBAPP: test-appdemo001
  GROUP: rg-arcadis-habitats-dev-001
  ACCOUNT: sa-test-appdemo001  # Does not have to exist, this will be created for you
  CONTAINER: sa-test-appdemo001-container
  EXPIRY_TIME: 10 minutes

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Java version 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
        
    - name: Build with Maven
      run: mvn package
      
    - name: Upload artifact for deployment jobs
      uses: actions/upload-artifact@v2
      with:
        name: java-app
        path: '${{ github.workspace }}/target/*.war'
  
  publish:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      # - name: Azure Login
      #   uses: azure/login@v1
      #   with:
      #     creds: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_5C1BAEB81B3D4BF6A4E372B423AC92DA }}
          
      - name: Download artifact for deloyment
        uses: actions/download-artifact@v2
        with:
          name: java-app
      
      # - name: Zip the app contents
      #   uses: papeloto/action-zip@v1
      #   with:
      #     files: java-app.war
      #     dest: java-app.zip

      - name: Set SAS token expiration
        run: echo "expiry=`date -u -d "$EXPIRY_TIME" '+%Y-%m-%dT%H:%MZ'`" >> $GITHUB_ENV

      - name: Azure CLI script to Create & Delete SA, Container and Deploy WAR.
        uses: azure/CLI@v1
        with:
          azcliversion: 2.19.1
          inlineScript: |
            az extension add --name webapp

            az storage account create -n $ACCOUNT -g $GROUP -l australiaeast
            az storage container create -n $CONTAINER --account-name $ACCOUNT
            az storage blob upload -f java-app.zip --account-name $ACCOUNT -c $CONTAINER -n $ACCOUNT

            ZIP_URL=$(az storage blob generate-sas --full-uri --permissions r --expiry ${{ env.expiry }} --account-name $ACCOUNT -c $CONTAINER -n $ACCOUNT | xargs)

            az webapp deploy --name $WEBAPP --resource-group $GROUP --type war --src-url  $ZIP_URL --async false

            az storage container delete -n $CONTAINER --account-name $ACCOUNT